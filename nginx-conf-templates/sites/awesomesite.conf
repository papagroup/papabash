upstream awesomesite_upstream {
    server web:8001; # for a web port socket (we'll use this first)
}

server {
    listen 80;
    
    server_name awesomesite.com
    root /var/www/awesomesite;

    access_log /var/log/nginx/awesomesite.access.log;
    error_log  /var/log/nginx/awesomesite.error.log;

    client_max_body_size 100M;

    # To include below ssl.conf, remember to run: 
    # openssl dhparam -out /etc/nginx/ssl/dhparam-2048.pem 2048
    # (from host) first. Then mount to /etc/nginx/ssl/ (if using docker)
    include /etc/nginx/conf/ssl.conf;

    location ~ ^/(assets/|robots.txt|humans.txt|favicon.ico) {
        expires max;
    }

    location / {
        proxy_pass http://awesomesite_upstream;
        proxy_set_header Host $http_host;
        proxy_set_header CLIENT_IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;
    }

    location /static/ {
        root /var/www/awesomesite;
        expires 168h;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # Redirect to https (LetsEncrypt)
    return 301 https://$server_name$request_uri;

}
